)
dev.off()
name <- "analyse/size stripchart.png"
png(filename=name)
stripchart(time~as.character(size),
data=data,
main="Different strip chart for each type",
xlab="Type",
ylab="Time",
col="brown3",
vertical=TRUE,
pch=19,
method = "jitter", jitter = 0.004
)
dev.off()
name <- "analyse/cluster stripchart.png"
png(filename=name)
stripchart(time~as.character(cluster),
data=data,
main="Different strip chart for each type",
xlab="Type",
ylab="Time",
col="brown3",
vertical=TRUE,
pch=19,
method = "jitter", jitter = 0.004
)
dev.off()
data$occ_date <- as.POSIXct(data$occ_date, format="%m/%d/%Y")
#fitting data to anova
aov_category <- lm(as.numeric(data$occ_date)~CATEGORY,data=data)
aov_category
anova_fun(aov_category, "analyse/category")
View(data)
anova<-aov(as.numeric(data$occ_date)~CATEGORY,data=data)
summary(anova)
aov_category
shapiro.test(resid(anova))
leveneTest(as.numeric(data$occ_date)~CATEGORY,data=data)
View(data)
summary(data$CALL.GROUPS)
str(data$CALL.GROUPS)
if(!require(devtools)){
install.packages("devtools")
}
if(!require(xda)){
install_github("ujjwalkarn/xda")
}
library(devtools)
library(xda)
anova_fun <- function(analysis, type){
#anova
#h0: they are equal, h1: they are not (p<0.05)
anova <- aov(analysis)
file_name <- " anova sumary.txt"
file_name <- paste(type, file_name)
s<-summary(anova)
capture.output(s, file = file_name)
name <- " plot witch 1.png"
name <- paste(type, name)
png(filename=name)
#Caso queira visualizar o grÃ¡fico
plot(analysis, which = 1)
dev.off()
name <- " plot witch 2.png"
name <- paste(type, name)
png(filename=name)
#can se that there's a positive skewness in the data
plot(analysis, which = 2)
dev.off()
sresids <- rstandard(analysis)
name <- " histogram.png"
name <- paste(type, name)
png(filename=name)
hist(sresids)
dev.off()
#to know the variable that are significantly different
# significant difference p < 0.05
#there's just two types, so no need for turkey's test
file_name <- " TukeyHSD sumary.txt"
file_name <- paste(type, file_name)
s<-TukeyHSD(anova)
capture.output(s, file = file_name)
}
data <- read.csv(file = "data/data.csv", header = T, sep = ";", stringsAsFactors = F)
data$occ_date <- as.POSIXct(data$occ_date, format="%m/%d/%Y")
name <- "analyse/type stripchart.png"
png(filename=name)
#visualizing data
stripchart(time~type,
data=data,
main="Different strip chart for each type",
xlab="Type",
ylab="Time",
col="brown3",
vertical=TRUE,
pch=19,
method = "jitter", jitter = 0.004
)
dev.off()
name <- "analyse/size stripchart.png"
png(filename=name)
stripchart(time~as.character(size),
data=data,
main="Different strip chart for each type",
xlab="Type",
ylab="Time",
col="brown3",
vertical=TRUE,
pch=19,
method = "jitter", jitter = 0.004
)
dev.off()
name <- "analyse/cluster stripchart.png"
png(filename=name)
stripchart(time~as.character(cluster),
data=data,
main="Different strip chart for each type",
xlab="Type",
ylab="Time",
col="brown3",
vertical=TRUE,
pch=19,
method = "jitter", jitter = 0.004
)
dev.off()
#fitting data to anova
aov_category <- lm(as.numeric(data$occ_date)~CATEGORY,data=data)
anova_fun(aov_category, "analyse/type")
name <- "analyse/type stripchart.png"
png(filename=name)
#visualizing data
stripchart(as.numeric(data$occ_date)~CATEGORY,
data=data,
main="Different strip chart for each type",
xlab="Type",
ylab="Time",
col="brown3",
vertical=TRUE,
pch=19,
method = "jitter", jitter = 0.004
)
dev.off()
#fitting data to anova
aov_category <- lm(as.numeric(data$occ_date)~CATEGORY,data=data)
anova_fun(aov_category, "analyse/type")
data("mtcars")
data(mtcars)
head(mtcars)
fivenum(mtcars$mpg)
IQR(mtcars$mpg)
boxplot(mtcars$mpg)
mtcars <- edit(mtcars)
boxplot(mtcars$mpg)
data("iris")
head(iris)
boxplot(iris$Sepal.Length ~ iris$Species)
boxplot(iris$Sepal.Length ~ iris$Species, main = "Petal Length")
str(mtcars)
str(iris)
hist(mtcars$mpg)
View(mtcars)
data(mtcars)
hist(mtcars$mpg)
?hist
hist(mtcars$mpg)
hist(mtcars$mpg, breaks = 10)
hist(mtcars$mpg, breaks = 10)
hist(mtcars$mpg,
main = "Histogram for MPG",
xlab = "MPG",
border = "blue",
col = "green",
probability = TRUE)
hist(mtcars$mpg,
main = "Histogram for MPG",
xlab = "MPG",
border = "blue",
col = "green",
breaks = 10,
probability = TRUE)
-bloggers.com/how-to-make-a-histogram-with-basic-r/
hist(mtcars$mpg,
main = "Histogram for MPG",
xlab = "MPG",
border = "blue",
col = "green",
breaks = 5,
probability = TRUE)
hist(mtcars$mpg,
main = "Histogram for MPG",
xlab = "MPG",
border = "blue",
col = "green",
breaks = 5,
probability = TRUE)
hist(mtcars$mpg,
main = "Histogram for MPG",
xlab = "MPG",
border = "blue",
col = "green",
breaks = 10,
probability = TRUE)
hist(mtcars$mpg,
main = "Histogram for MPG",
xlab = "MPG",
border = "blue",
col = "green",
breaks = 20,
probability = TRUE)
hist(mtcars$mpg,
main = "Histogram for MPG",
xlab = "MPG",
border = "blue",
col = "green",
breaks = 10,
probability = TRUE)
hist(mtcars$mpg,
main = "Histogram for MPG",
xlab = "MPG",
border = "blue",
col = "green",
probability = TRUE)
hist(mtcars$mpg,
main = "Histogram for MPG",
xlab = "MPG",
border = "blue",
col = "green",
las = 1,
breaks = 10,
probability = TRUE)
hist(mtcars$mpg,
# https://www.r-bloggers.com/how-to-make-a-histogram-with-basic-r/
hist(mtcars$mpg,
main = "Histogram for MPG",
xlab = "MPG",
border = "blue",
col = "green",
las = 3,
breaks = 10,
probability = TRUE)
# https://www.r-bloggers.com/how-to-make-a-histogram-with-basic-r/
hist(mtcars$mpg,
main = "Histogram for MPG",
xlab = "MPG",
border = "blue",
col = "green",
las = 1,
breaks = 10,
probability = TRUE)
# https://www.r-bloggers.com/how-to-make-a-histogram-with-basic-r/
hist(mtcars$mpg,
main = "Histogram for MPG",
xlab = "MPG",
border = "blue",
col = "green",
las = 1,
breaks = 10,
prob = TRUE)
# https://www.r-bloggers.com/how-to-make-a-histogram-with-basic-r/
hist(mtcars$mpg,
main = "Histogram for MPG",
xlab = "MPG",
border = "blue",
col = "green",
las = 0,
breaks = 10,
prob = TRUE)
# https://www.r-bloggers.com/how-to-make-a-histogram-with-basic-r/
hist(mtcars$mpg,
main = "Histogram for MPG",
xlab = "MPG",
border = "blue",
col = "green",
breaks = 10,
prob = TRUE)
# https://www.r-bloggers.com/how-to-make-a-histogram-with-basic-r/
hist(mtcars$mpg,
main = "Histogram for MPG",
xlab = "MPG",
border = "blue",
col = "green",
breaks = 10)
# https://www.r-bloggers.com/how-to-make-a-histogram-with-basic-r/
hist(mtcars$mpg,
main = "Histogram for MPG",
xlab = "MPG",
border = "blue",
col = "green",
xlim = c(10, 40),
breaks = 10)
# https://www.r-bloggers.com/how-to-make-a-histogram-with-basic-r/
hist(mtcars$mpg,
main = "Histogram for MPG",
xlab = "MPG",
border = "blue",
col = "green",
xlim = c(10, 35),
breaks = 10)
# https://www.r-bloggers.com/how-to-make-a-histogram-with-basic-r/
hist(mtcars$mpg,
main = "Histogram for MPG",
xlab = "MPG",
border = "blue",
col = "green",
xlim = c(10, 35),
breaks = 10,
prob = T)
# https://www.r-bloggers.com/how-to-make-a-histogram-with-basic-r/
hist(mtcars$mpg,
main = "Histogram for MPG",
xlab = "MPG",
border = "blue",
col = "green",
xlim = c(10, 35),
ylim = c(0,1),
breaks = 10,
prob = T)
# https://www.r-bloggers.com/how-to-make-a-histogram-with-basic-r/
hist(mtcars$mpg,
main = "Histogram for MPG",
xlab = "MPG",
border = "blue",
col = "green",
xlim = c(10, 35),
ylim = c(0,0.5),
breaks = 10,
prob = T)
# https://www.r-bloggers.com/how-to-make-a-histogram-with-basic-r/
hist(mtcars$mpg,
main = "Histogram for MPG",
xlab = "MPG",
border = "blue",
col = "green",
xlim = c(10, 35),
ylim = c(0,0.2),
breaks = 10,
prob = T)
# https://www.r-bloggers.com/how-to-make-a-histogram-with-basic-r/
hist(mtcars$mpg,
main = "Histogram for MPG",
xlab = "MPG",
border = "blue",
col = "green",
xlim = c(10, 35),
breaks = 10,
prob = T)
# https://www.r-bloggers.com/how-to-make-a-histogram-with-basic-r/
# https://en.wikipedia.org/wiki/Probability_density_function
hist(mtcars$mpg,
main = "Histogram for MPG",
xlab = "MPG",
border = "blue",
col = "green",
xlim = c(10, 35),
ylim = c(0, 0.08),
breaks = 10,
prob = T)
# https://en.wikipedia.org/wiki/Probability_density_function
hist(mtcars$mpg,
main = "Histogram for MPG",
xlab = "MPG",
border = "blue",
col = "green",
xlim = c(10, 35),
ylim = c(0, 0.1),
breaks = 10,
prob = T)
# https://www.r-bloggers.com/how-to-make-a-histogram-with-basic-r/
# https://en.wikipedia.org/wiki/Probability_density_function
hist(mtcars$mpg,
main = "Histogram for MPG",
xlab = "MPG",
border = "blue",
col = "green",
xlim = c(10, 35),
ylim = c(0, 0.2),
breaks = 10,
prob = T)
# https://en.wikipedia.org/wiki/Probability_density_function
hist(mtcars$mpg,
main = "Histogram for MPG",
xlab = "MPG",
border = "blue",
col = "green",
xlim = c(10, 35),
ylim = c(0, 0.15),
breaks = 10,
prob = T)
# https://en.wikipedia.org/wiki/Probability_density_function
hist(mtcars$mpg,
main = "Histogram for MPG",
xlab = "MPG",
border = "blue",
col = "green",
xlim = c(10, 35),
ylim = c(0, 0.12),
breaks = 10,
prob = T)
# https://en.wikipedia.org/wiki/Probability_density_function
hist(mtcars$mpg,
main = "Histogram for MPG",
xlab = "MPG",
border = "blue",
col = "green",
xlim = c(10, 35),
ylim = c(0, 0.11),
breaks = 10,
prob = T)
# https://en.wikipedia.org/wiki/Probability_density_function
hist(mtcars$mpg,
main = "Histogram for MPG",
xlab = "MPG",
border = "blue",
col = "green",
xlim = c(10, 35),
ylim = c(0, 0.12),
breaks = 10,
prob = T)
# https://en.wikipedia.org/wiki/Probability_density_function
hist(mtcars$mpg,
main = "Histogram for MPG",
xlab = "MPG",
border = "blue",
col = "green",
xlim = c(10, 35),
ylim = c(0, 0.12),
breaks = 5,
prob = T)
# https://en.wikipedia.org/wiki/Probability_density_function
hist(mtcars$mpg,
main = "Histogram for MPG",
xlab = "MPG",
border = "blue",
col = "green",
xlim = c(10, 35),
ylim = c(0, 0.12),
breaks = 20,
prob = T)
# https://en.wikipedia.org/wiki/Probability_density_function
hist(mtcars$mpg,
main = "Histogram for MPG",
xlab = "MPG",
border = "blue",
col = "green",
xlim = c(10, 35),
ylim = c(0, 0.2),
breaks = 20,
prob = T)
# https://en.wikipedia.org/wiki/Probability_density_function
hist(mtcars$mpg,
main = "Histogram for MPG",
xlab = "MPG",
border = "blue",
col = "green",
xlim = c(10, 35),
ylim = c(0, 0.12),
breaks = 10,
prob = T)
lines(density(mtcars$mpg))
hist(mtcars$mpg,
main = "Histogram for MPG",
xlab = "MPG",
border = "blue",
col = "green",
xlim = c(10, 35),
ylim = c(0, 0.12),
prob = T)
lines(density(mtcars$mpg))
?density
lines(density(mtcars$mpg))
hist(mtcars$mpg,
main = "Histogram for MPG",
xlab = "MPG",
border = "blue",
col = "green",
xlim = c(10, 35),
ylim = c(0, 0.12),
breaks = 20,
prob = T)
lines(density(mtcars$mpg))
hist(mtcars$mpg,
main = "Histogram for MPG",
xlab = "MPG",
border = "blue",
col = "green",
xlim = c(0, 35),
ylim = c(0, 0.12),
breaks = 20,
prob = T)
lines(density(mtcars$mpg))
lines(density(mtcars$mpg))
hist(mtcars$mpg,
main = "Histogram for MPG",
xlab = "MPG",
border = "blue",
col = "green",
xlim = c(10, 35),
ylim = c(0, 0.12),
breaks = 20,
prob = T)
lines(density(mtcars$mpg))
hist(mtcars$mpg,
main = "Histogram for MPG",
xlab = "MPG",
border = "blue",
col = "green",
xlim = c(10, 35),
ylim = c(0, 0.12),
breaks = 10,
prob = T)
lines(density(mtcars$mpg))
